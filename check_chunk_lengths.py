#!/usr/bin/env python3
"""–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã —á–∞–Ω–∫–æ–≤ –≤ –ë–î"""
from database.production_db_client import ProductionDBClient

db = ProductionDBClient()

with db._cursor() as cur:
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª–∏–Ω—ã —á–∞–Ω–∫–æ–≤
    cur.execute('''
        SELECT
          COUNT(*) as total,
          ROUND(AVG(LENGTH(text))) as avg_length,
          MAX(LENGTH(text)) as max_length,
          MIN(LENGTH(text)) as min_length,
          COUNT(*) FILTER (WHERE LENGTH(text) > 7000) as over_7000,
          COUNT(*) FILTER (WHERE LENGTH(text) > 8000) as over_8000,
          COUNT(*) FILTER (WHERE LENGTH(text) = 8000) as exactly_8000
        FROM article_chunks
    ''')
    stats = cur.fetchone()

    print('='*80)
    print('–°–¢–ê–¢–ò–°–¢–ò–ö–ê –î–õ–ò–ù–´ –ß–ê–ù–ö–û–í')
    print('='*80)
    print(f'\nüìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:')
    print(f'  –í—Å–µ–≥–æ —á–∞–Ω–∫–æ–≤: {stats[0]:,}')
    print(f'  –°—Ä–µ–¥–Ω—è—è –¥–ª–∏–Ω–∞: {stats[1]:,} —Å–∏–º–≤–æ–ª–æ–≤')
    print(f'  –ú–∞–∫—Å–∏–º—É–º: {stats[2]:,} —Å–∏–º–≤–æ–ª–æ–≤')
    print(f'  –ú–∏–Ω–∏–º—É–º: {stats[3]:,} —Å–∏–º–≤–æ–ª–æ–≤')

    print(f'\n‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ —á–∞–Ω–∫–∏:')
    print(f'  > 7000 —Å–∏–º–≤–æ–ª–æ–≤: {stats[4]:,} ({stats[4]/stats[0]*100:.2f}%)')
    print(f'  > 8000 —Å–∏–º–≤–æ–ª–æ–≤: {stats[5]:,} ({stats[5]/stats[0]*100:.2f}%)')
    print(f'  = 8000 —Å–∏–º–≤–æ–ª–æ–≤ (–æ–±—Ä–µ–∑–∞–Ω—ã): {stats[6]:,} ({stats[6]/stats[0]*100:.2f}%)')

    # –¢–æ–ø-10 —Å–∞–º—ã—Ö –¥–ª–∏–Ω–Ω—ã—Ö
    cur.execute('''
        SELECT id, LENGTH(text) as len, title_norm
        FROM article_chunks
        WHERE LENGTH(text) > 7000
        ORDER BY LENGTH(text) DESC
        LIMIT 10
    ''')

    long_chunks = cur.fetchall()
    if long_chunks:
        print(f'\nüìù –¢–æ–ø-10 —Å–∞–º—ã—Ö –¥–ª–∏–Ω–Ω—ã—Ö —á–∞–Ω–∫–æ–≤:')
        for i, (id, length, title) in enumerate(long_chunks, 1):
            print(f'  {i}. ID {id}: {length:,} —Å–∏–º–≤–æ–ª–æ–≤ - {title[:60]}...')
