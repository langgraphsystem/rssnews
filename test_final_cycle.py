#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ —Ä–∞–±–æ—Ç—ã —Å Railway PostgreSQL
"""
import os
import sys
import subprocess

def check_pg_dsn():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è PG_DSN"""
    pg_dsn = os.environ.get('PG_DSN')
    if not pg_dsn:
        print("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è PG_DSN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
        print("   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–µ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Ç–µ—Å—Ç–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä:")
        print("   set PG_DSN=postgresql://user:pass@host:port/dbname")
        return False
    print(f"‚úÖ PG_DSN –Ω–∞–π–¥–µ–Ω–∞: {pg_dsn[:50]}...")
    return True

def run_full_cycle():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª: discovery -> poll -> work"""
    
    print("üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ü–û–õ–ù–û–ì–û –¶–ò–ö–õ–ê")
    print("=" * 50)
    
    # –û—á–∏—â–∞–µ–º –ë–î –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º —Å—Ö–µ–º—É
    print("1. –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º —Å—Ö–µ–º—É –ë–î...")
    result = subprocess.run([sys.executable, "fix_schema.py"], 
                          capture_output=True, text=True)
    if result.returncode == 0:
        print("‚úÖ –°—Ö–µ–º–∞ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∞")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è —Å—Ö–µ–º—ã")
        return False
    
    # Discovery - –¥–æ–±–∞–≤–ª—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ RSS
    print("\n2. –î–æ–±–∞–≤–ª—è–µ–º RSS —Ñ–∏–¥—ã...")
    test_feeds = [
        "https://feeds.bbci.co.uk/news/rss.xml",
        "https://rss.cnn.com/rss/edition.rss",
        "https://www.theguardian.com/world/rss"
    ]
    
    for i, feed_url in enumerate(test_feeds, 1):
        print(f"   2.{i} –î–æ–±–∞–≤–ª—è–µ–º: {feed_url}")
        result = subprocess.run([
            sys.executable, "main.py", "discovery", "--feed", feed_url
        ], capture_output=True, text=True, timeout=60)
        
        if result.returncode == 0:
            print(f"      ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        else:
            print(f"      ‚ö†Ô∏è –û—à–∏–±–∫–∞: {result.stderr.strip()}")
    
    # Poll - –æ–ø—Ä–∞—à–∏–≤–∞–µ–º —Ñ–∏–¥—ã
    print("\n3. –û–ø—Ä–∞—à–∏–≤–∞–µ–º RSS —Ñ–∏–¥—ã...")
    result = subprocess.run([sys.executable, "main.py", "poll"], 
                          capture_output=True, text=True, timeout=120)
    
    if result.returncode == 0:
        print("‚úÖ –û–ø—Ä–æ—Å RSS –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–ø—Ä–æ—Å–∞: {result.stderr.strip()}")
        return False
    
    # Work - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç—å–∏
    print("\n4. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç—å–∏...")
    result = subprocess.run([
        sys.executable, "main.py", "work", "--worker-id", "final-test"
    ], capture_output=True, text=True, timeout=180)
    
    if result.returncode == 0:
        print("‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç–µ–π –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
        if result.stdout:
            print(f"   Output: {result.stdout.strip()}")
    else:
        print(f"‚ö†Ô∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏")
        if result.stderr:
            print(f"   Error: {result.stderr.strip()[:200]}...")
    
    return True

def check_results():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–±–æ—Ç—ã"""
    print("\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã...")
    
    try:
        from pg_client import PgClient
        client = PgClient()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º feeds
        feeds = client.get_active_feeds()
        print(f"‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ñ–∏–¥–æ–≤: {len(feeds)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫–æ–ª—å–∫–æ —Å—Ç–∞—Ç–µ–π –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ
        with client.conn.cursor() as cur:
            cur.execute("SELECT COUNT(*) FROM raw")
            total_articles = cur.fetchone()[0]
            print(f"‚úÖ –í—Å–µ–≥–æ —Å—Ç–∞—Ç–µ–π: {total_articles}")
            
            cur.execute("SELECT COUNT(*) FROM raw WHERE status = 'pending'")
            pending_articles = cur.fetchone()[0]
            print(f"‚úÖ Pending —Å—Ç–∞—Ç–µ–π: {pending_articles}")
            
            cur.execute("SELECT COUNT(*) FROM raw WHERE status = 'stored'")
            processed_articles = cur.fetchone()[0]
            print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π: {processed_articles}")
            
            cur.execute("SELECT COUNT(*) FROM articles_index")
            indexed_articles = cur.fetchone()[0]
            print(f"‚úÖ –°—Ç–∞—Ç–µ–π –≤ –∏–Ω–¥–µ–∫—Å–µ: {indexed_articles}")
            
            cur.execute("SELECT COUNT(*) FROM config")
            config_entries = cur.fetchone()[0]
            print(f"‚úÖ –ó–∞–ø–∏—Å–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {config_entries}")
        
        client.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    if not check_pg_dsn():
        print("\n–¢–µ—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω –±–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î.")
        return 1
    
    if not run_full_cycle():
        print("‚ùå –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω")
        return 1
    
    if not check_results():
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
        return 1
    
    print("\n" + "=" * 50)
    print("üéâ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
    print("üöÄ RSS NEWS PROJECT –ú–ò–ì–†–ò–†–û–í–ê–ù –ù–ê POSTGRESQL!")
    print("=" * 50)
    
    print("\nüìã –ß—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:")
    print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Railway PostgreSQL")
    print("‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∏ –º–∏–≥—Ä–∞—Ü–∏—è —Å—Ö–µ–º—ã –ë–î")
    print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ RSS —Ñ–∏–¥–æ–≤ (discovery)")
    print("‚úÖ –û–ø—Ä–æ—Å RSS –∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–µ–π (poll)")
    print("‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç–µ–π –∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (work)")
    print("‚úÖ –î–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—è –∏ –∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ")
    print("‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ")
    
    print("\nüéØ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–º—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    print("üí° –ó–∞–ø—É—Å–∫–∞–π—Ç–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ:")
    print("   python main.py poll    # –ö–∞–∂–¥—ã–µ 15-30 –º–∏–Ω—É—Ç")
    print("   python main.py work    # –ö–∞–∂–¥—ã–µ 5-10 –º–∏–Ω—É—Ç")
    
    return 0

if __name__ == "__main__":
    sys.exit(main())