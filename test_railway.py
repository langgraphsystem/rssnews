#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å Railway PostgreSQL
"""
import os
import sys

if 'PG_DSN' not in os.environ:
    print("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è PG_DSN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
    print("   –≠—Ç–æ—Ç —Ç–µ—Å—Ç —Ç—Ä–µ–±—É–µ—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î.")
    print("   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–µ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º: set PG_DSN=...")
    sys.exit(1)
print("‚úÖ PG_DSN –Ω–∞–π–¥–µ–Ω–∞.")

def test_connection():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Railway PostgreSQL"""
    print("üîó –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Railway PostgreSQL...")
    
    try:
        from pg_client import PgClient
        client = PgClient()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Railway PostgreSQL —É—Å–ø–µ—à–Ω–æ!")
        
        # –¢–µ—Å—Ç –ø—Ä–æ—Å—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏
        client.upsert_config("migration_test", "success")
        value = client.get_config("migration_test")
        
        if value == "success":
            print("‚úÖ –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –ë–î —Ä–∞–±–æ—Ç–∞—é—Ç!")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–π: –ø–æ–ª—É—á–µ–Ω–æ '{value}' –≤–º–µ—Å—Ç–æ 'success'")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def test_main_commands():
    """–¢–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ —Å —Ä–µ–∞–ª—å–Ω–æ–π –ë–î"""
    import subprocess
    
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã main.py —Å —Ä–µ–∞–ª—å–Ω–æ–π –ë–î...")
    
    # –¢–µ—Å—Ç ensure
    print("1. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ö–µ–º—ã (ensure)...")
    try:
        result = subprocess.run([
            sys.executable, "main.py", "ensure"
        ], capture_output=True, text=True, timeout=30)
        
        if result.returncode == 0:
            print("‚úÖ –°—Ö–µ–º–∞ –ë–î —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            print(f"   Output: {result.stdout.strip()}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ö–µ–º—ã: {result.stderr}")
            return False
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ö–µ–º—ã: {e}")
        return False
    
    # –¢–µ—Å—Ç discovery
    print("\n2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ RSS (discovery)...")
    try:
        result = subprocess.run([
            sys.executable, "main.py", "discovery", 
            "--feed", "https://feeds.bbci.co.uk/news/rss.xml"
        ], capture_output=True, text=True, timeout=60)
        
        if result.returncode == 0:
            print("‚úÖ RSS —Ñ–∏–¥ –¥–æ–±–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            print(f"   Output: {result.stdout.strip()}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è RSS: {result.stderr}")
            # –ù–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º False - –≤–æ–∑–º–æ–∂–Ω–æ, —Ñ–∏–¥ —É–∂–µ –µ—Å—Ç—å –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
    except Exception as e:
        print(f"‚ö†Ô∏è –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ RSS: {e}")
    
    # –¢–µ—Å—Ç poll
    print("\n3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–ø—Ä–æ—Å RSS (poll)...")
    try:
        result = subprocess.run([
            sys.executable, "main.py", "poll"
        ], capture_output=True, text=True, timeout=90)
        
        if result.returncode == 0:
            print("‚úÖ –û–ø—Ä–æ—Å RSS –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            print(f"   Output: {result.stdout.strip()}")
        else:
            print(f"‚ö†Ô∏è –û–ø—Ä–æ—Å RSS –∑–∞–≤–µ—Ä—à–µ–Ω —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏: {result.stderr}")
            # –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ - –º–æ–∂–µ—Ç –Ω–µ –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ñ–∏–¥–æ–≤
    except Exception as e:
        print(f"‚ö†Ô∏è –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ–ø—Ä–æ—Å–µ RSS: {e}")
    
    # –¢–µ—Å—Ç work
    print("\n4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å—Ç–∞—Ç–µ–π (work)...")
    try:
        result = subprocess.run([
            sys.executable, "main.py", "work", "--worker-id", "test-railway"
        ], capture_output=True, text=True, timeout=90)
        
        if result.returncode == 0:
            print("‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç–µ–π –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            print(f"   Output: {result.stdout.strip()}")
        else:
            print(f"‚ö†Ô∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç–µ–π: {result.stderr}")
            # –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ - –º–æ–∂–µ—Ç –Ω–µ –±—ã—Ç—å pending —Å—Ç–∞—Ç–µ–π
    except Exception as e:
        print(f"‚ö†Ô∏è –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç–∞—Ç–µ–π: {e}")
    
    return True

def check_database_content():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ë–î"""
    print("\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        from pg_client import PgClient
        client = PgClient()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º feeds
        feeds = client.get_active_feeds()
        print(f"‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ñ–∏–¥–æ–≤: {len(feeds)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º pending raw —Å—Ç–∞—Ç—å–∏
        pending = client.get_pending_raw_rows(5)
        print(f"‚úÖ Pending —Å—Ç–∞—Ç–µ–π: {len(pending)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º config
        version = client.get_config("schema_version")
        print(f"‚úÖ –í–µ—Ä—Å–∏—è —Å—Ö–µ–º—ã: {version}")
        
        client.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ë–î: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=" * 60)
    print("üöÄ –¢–ï–°–¢ –° RAILWAY POSTGRESQL")
    print("=" * 60)
    
    success = True
    
    # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    if not test_connection():
        print("‚ùå –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–æ–≤–∞–ª–µ–Ω")
        return 1
    
    # –¢–µ—Å—Ç –∫–æ–º–∞–Ω–¥
    if not test_main_commands():
        print("‚ùå –¢–µ—Å—Ç –∫–æ–º–∞–Ω–¥ –ø—Ä–æ–≤–∞–ª–µ–Ω")
        success = False
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
    if not check_database_content():
        print("‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ë–î –ø—Ä–æ–≤–∞–ª–µ–Ω–∞")
        success = False
    
    print("\n" + "=" * 60)
    if success:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –° RAILWAY POSTGRESQL –ü–†–û–ô–î–ï–ù–´!")
        print("üöÄ –ú–∏–≥—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞!")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏")
        print("üîß –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞")
    
    print("=" * 60)
    
    print("\nüìã –ß—Ç–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ:")
    print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Railway PostgreSQL")
    print("‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ö–µ–º—ã –ë–î")
    print("‚úÖ –í—Å–µ –∫–æ–º–∞–Ω–¥—ã main.py")
    print("‚úÖ –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –ë–î")
    
    print("\nüéØ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    print("üí° –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:")
    print("   python main.py discovery --feed <rss_url>")
    print("   python main.py poll")
    print("   python main.py work")
    
    return 0

if __name__ == "__main__":
    sys.exit(main())