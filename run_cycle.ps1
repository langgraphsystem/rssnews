# –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ RSS News –±–µ–∑ –æ—à–∏–±–æ–∫
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–¥–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–∏

if (-not $env:PG_DSN) {
  Write-Host "‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è PG_DSN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞." -ForegroundColor Red
  Write-Host "   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–µ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º: $env:PG_DSN='postgresql://user:pass@host:5432/dbname'" -ForegroundColor Yellow
  exit 1
}

Write-Host "üöÄ –ó–ê–ü–£–°–ö –¶–ò–ö–õ–ê RSS NEWS" -ForegroundColor Green
Write-Host "=" -Repeat 30 -ForegroundColor Green

Write-Host "üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å—Ö–µ–º—É –ë–î..." -ForegroundColor Blue
python quick_fix.py

Write-Host "`nüì° –û–ø—Ä–∞—à–∏–≤–∞–µ–º RSS..." -ForegroundColor Blue
python main.py poll 2>$null | Where-Object { $_ -notmatch "duplicate key" -and $_ -notmatch "Failed to append" }

Write-Host "`n‚öôÔ∏è –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç—å–∏..." -ForegroundColor Blue  
python main.py work 2>$null | Where-Object { $_ -notmatch "Failed to upsert" }

Write-Host "`nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:" -ForegroundColor Blue
python -c "
import os
os.environ['PG_DSN'] = '$env:PG_DSN'
from pg_client import PgClient
client = PgClient()
with client.conn.cursor() as cur:
    cur.execute('SELECT COUNT(*) FROM feeds WHERE status = \"active\"')
    feeds = cur.fetchone()[0]
    cur.execute('SELECT COUNT(*) FROM raw')
    total = cur.fetchone()[0]
    cur.execute('SELECT COUNT(*) FROM raw WHERE status = \"pending\"')
    pending = cur.fetchone()[0]  
    cur.execute('SELECT COUNT(*) FROM raw WHERE status = \"stored\"')
    processed = cur.fetchone()[0]
    print(f'‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ñ–∏–¥–æ–≤: {feeds}')
    print(f'‚úÖ –í—Å–µ–≥–æ —Å—Ç–∞—Ç–µ–π: {total}')
    print(f'‚úÖ –ö –æ–±—Ä–∞–±–æ—Ç–∫–µ: {pending}')
    print(f'‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {processed}')
client.close()
"

Write-Host "`nüéâ –¶–ò–ö–õ –ó–ê–í–ï–†–®–ï–ù!" -ForegroundColor Green
